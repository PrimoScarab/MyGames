//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/SteeringWheel.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SteeringWheel : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SteeringWheel()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""SteeringWheel"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""2020a636-87fd-4078-87c1-c1fc3c9471ee"",
            ""actions"": [
                {
                    ""name"": ""Steer"",
                    ""type"": ""Value"",
                    ""id"": ""6ef94ac2-cccd-4851-bd8d-d4ae7b4bfaeb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Gas"",
                    ""type"": ""Value"",
                    ""id"": ""988b18b5-0434-460b-9881-4d21b63e9e3d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Brake"",
                    ""type"": ""Value"",
                    ""id"": ""6355a13d-d7a1-4d77-a941-8bf75af1e21e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GearUp"",
                    ""type"": ""Value"",
                    ""id"": ""f5f33ab9-6ca5-4812-998d-e1509eb74d07"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GearDown"",
                    ""type"": ""Value"",
                    ""id"": ""b769c011-af84-4870-b738-a7caf986c537"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ForksUp"",
                    ""type"": ""Value"",
                    ""id"": ""d38bbed4-ea00-4bac-b261-c50d85825453"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ForksDown"",
                    ""type"": ""Value"",
                    ""id"": ""286f8496-060f-41f5-9037-7aa839729269"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TiltUp"",
                    ""type"": ""Value"",
                    ""id"": ""4d846e73-de7b-4bc6-b7c1-69fb0c9be43c"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TiltDown"",
                    ""type"": ""Value"",
                    ""id"": ""e567587f-a710-41e3-8d1f-70332b5ba240"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ForksLeft"",
                    ""type"": ""Value"",
                    ""id"": ""c3273c63-3bd6-4d9a-8438-b74defd61dda"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ForksRight"",
                    ""type"": ""Value"",
                    ""id"": ""b81dc998-4452-4c59-8342-686fff4284ab"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ForksSplit"",
                    ""type"": ""Value"",
                    ""id"": ""fbfaf204-3c44-4f47-a2e2-4a9c0c86e115"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ForksClamp"",
                    ""type"": ""Value"",
                    ""id"": ""25338845-9e5c-46b4-865f-5a6ecc5adb89"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2490af7d-78f0-42c0-b11b-14678c511c5e"",
                    ""path"": ""<HID::Driving Force GT>/button14"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GearUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb0b7ebc-5f34-4174-a182-2922c01066cd"",
                    ""path"": ""<HID::Driving Force GT>/button13"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GearDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""SteerLeft/Right"",
                    ""id"": ""8e0b2d5f-0de5-4395-9533-3cf7135fc22a"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""b67f90b8-4d87-4009-a724-35bd1a2eb635"",
                    ""path"": ""<HID::Driving Force GT>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b42c1d39-4d73-4800-bb76-e2154bd966a2"",
                    ""path"": ""<HID::Driving Force GT>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0c3fbdaa-b3d9-4bf9-9903-62ddc30a9452"",
                    ""path"": ""<HID::Driving Force GT>/z"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""Gas"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fc9fe25-477f-4f8d-b7f5-e9c5399b66a9"",
                    ""path"": ""<HID::Teensyduino Serial/Keyboard/Mouse/Joystick>/button2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForksDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c63ef0c3-02eb-402c-b652-a4318248fe9a"",
                    ""path"": ""<HID::Teensyduino Serial/Keyboard/Mouse/Joystick>/button3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForksUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""99b539d5-8382-4f70-a607-9f18530646ef"",
                    ""path"": ""<HID::Teensyduino Serial/Keyboard/Mouse/Joystick>/button4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TiltUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""055b3796-6f52-44d2-a654-1cead7026ff0"",
                    ""path"": ""<HID::Teensyduino Serial/Keyboard/Mouse/Joystick>/button5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TiltDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da495602-741a-4f3c-8bc2-4a898f923692"",
                    ""path"": ""<HID::Teensyduino Serial/Keyboard/Mouse/Joystick>/button6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForksLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c81cf75-c61a-4586-8ee8-7f6086288aed"",
                    ""path"": ""<HID::Teensyduino Serial/Keyboard/Mouse/Joystick>/button7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForksRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2acb127b-2f55-4dc5-9ea8-5d12b8c15277"",
                    ""path"": ""<HID::Driving Force GT>/rz"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""25138e2f-104c-4b18-b293-befe8b49c838"",
                    ""path"": ""<HID::Driving Force GT>/button4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForksSplit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59b0f2d9-8400-4c3d-8b67-66f90f7f08bb"",
                    ""path"": ""<HID::Driving Force GT>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForksClamp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Steer = m_Gameplay.FindAction("Steer", throwIfNotFound: true);
        m_Gameplay_Gas = m_Gameplay.FindAction("Gas", throwIfNotFound: true);
        m_Gameplay_Brake = m_Gameplay.FindAction("Brake", throwIfNotFound: true);
        m_Gameplay_GearUp = m_Gameplay.FindAction("GearUp", throwIfNotFound: true);
        m_Gameplay_GearDown = m_Gameplay.FindAction("GearDown", throwIfNotFound: true);
        m_Gameplay_ForksUp = m_Gameplay.FindAction("ForksUp", throwIfNotFound: true);
        m_Gameplay_ForksDown = m_Gameplay.FindAction("ForksDown", throwIfNotFound: true);
        m_Gameplay_TiltUp = m_Gameplay.FindAction("TiltUp", throwIfNotFound: true);
        m_Gameplay_TiltDown = m_Gameplay.FindAction("TiltDown", throwIfNotFound: true);
        m_Gameplay_ForksLeft = m_Gameplay.FindAction("ForksLeft", throwIfNotFound: true);
        m_Gameplay_ForksRight = m_Gameplay.FindAction("ForksRight", throwIfNotFound: true);
        m_Gameplay_ForksSplit = m_Gameplay.FindAction("ForksSplit", throwIfNotFound: true);
        m_Gameplay_ForksClamp = m_Gameplay.FindAction("ForksClamp", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Steer;
    private readonly InputAction m_Gameplay_Gas;
    private readonly InputAction m_Gameplay_Brake;
    private readonly InputAction m_Gameplay_GearUp;
    private readonly InputAction m_Gameplay_GearDown;
    private readonly InputAction m_Gameplay_ForksUp;
    private readonly InputAction m_Gameplay_ForksDown;
    private readonly InputAction m_Gameplay_TiltUp;
    private readonly InputAction m_Gameplay_TiltDown;
    private readonly InputAction m_Gameplay_ForksLeft;
    private readonly InputAction m_Gameplay_ForksRight;
    private readonly InputAction m_Gameplay_ForksSplit;
    private readonly InputAction m_Gameplay_ForksClamp;
    public struct GameplayActions
    {
        private @SteeringWheel m_Wrapper;
        public GameplayActions(@SteeringWheel wrapper) { m_Wrapper = wrapper; }
        public InputAction @Steer => m_Wrapper.m_Gameplay_Steer;
        public InputAction @Gas => m_Wrapper.m_Gameplay_Gas;
        public InputAction @Brake => m_Wrapper.m_Gameplay_Brake;
        public InputAction @GearUp => m_Wrapper.m_Gameplay_GearUp;
        public InputAction @GearDown => m_Wrapper.m_Gameplay_GearDown;
        public InputAction @ForksUp => m_Wrapper.m_Gameplay_ForksUp;
        public InputAction @ForksDown => m_Wrapper.m_Gameplay_ForksDown;
        public InputAction @TiltUp => m_Wrapper.m_Gameplay_TiltUp;
        public InputAction @TiltDown => m_Wrapper.m_Gameplay_TiltDown;
        public InputAction @ForksLeft => m_Wrapper.m_Gameplay_ForksLeft;
        public InputAction @ForksRight => m_Wrapper.m_Gameplay_ForksRight;
        public InputAction @ForksSplit => m_Wrapper.m_Gameplay_ForksSplit;
        public InputAction @ForksClamp => m_Wrapper.m_Gameplay_ForksClamp;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Steer.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSteer;
                @Steer.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSteer;
                @Steer.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSteer;
                @Gas.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnGas;
                @Gas.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnGas;
                @Gas.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnGas;
                @Brake.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnBrake;
                @Brake.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnBrake;
                @Brake.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnBrake;
                @GearUp.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnGearUp;
                @GearUp.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnGearUp;
                @GearUp.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnGearUp;
                @GearDown.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnGearDown;
                @GearDown.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnGearDown;
                @GearDown.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnGearDown;
                @ForksUp.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksUp;
                @ForksUp.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksUp;
                @ForksUp.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksUp;
                @ForksDown.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksDown;
                @ForksDown.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksDown;
                @ForksDown.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksDown;
                @TiltUp.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTiltUp;
                @TiltUp.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTiltUp;
                @TiltUp.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTiltUp;
                @TiltDown.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTiltDown;
                @TiltDown.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTiltDown;
                @TiltDown.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTiltDown;
                @ForksLeft.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksLeft;
                @ForksLeft.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksLeft;
                @ForksLeft.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksLeft;
                @ForksRight.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksRight;
                @ForksRight.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksRight;
                @ForksRight.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksRight;
                @ForksSplit.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksSplit;
                @ForksSplit.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksSplit;
                @ForksSplit.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksSplit;
                @ForksClamp.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksClamp;
                @ForksClamp.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksClamp;
                @ForksClamp.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnForksClamp;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Steer.started += instance.OnSteer;
                @Steer.performed += instance.OnSteer;
                @Steer.canceled += instance.OnSteer;
                @Gas.started += instance.OnGas;
                @Gas.performed += instance.OnGas;
                @Gas.canceled += instance.OnGas;
                @Brake.started += instance.OnBrake;
                @Brake.performed += instance.OnBrake;
                @Brake.canceled += instance.OnBrake;
                @GearUp.started += instance.OnGearUp;
                @GearUp.performed += instance.OnGearUp;
                @GearUp.canceled += instance.OnGearUp;
                @GearDown.started += instance.OnGearDown;
                @GearDown.performed += instance.OnGearDown;
                @GearDown.canceled += instance.OnGearDown;
                @ForksUp.started += instance.OnForksUp;
                @ForksUp.performed += instance.OnForksUp;
                @ForksUp.canceled += instance.OnForksUp;
                @ForksDown.started += instance.OnForksDown;
                @ForksDown.performed += instance.OnForksDown;
                @ForksDown.canceled += instance.OnForksDown;
                @TiltUp.started += instance.OnTiltUp;
                @TiltUp.performed += instance.OnTiltUp;
                @TiltUp.canceled += instance.OnTiltUp;
                @TiltDown.started += instance.OnTiltDown;
                @TiltDown.performed += instance.OnTiltDown;
                @TiltDown.canceled += instance.OnTiltDown;
                @ForksLeft.started += instance.OnForksLeft;
                @ForksLeft.performed += instance.OnForksLeft;
                @ForksLeft.canceled += instance.OnForksLeft;
                @ForksRight.started += instance.OnForksRight;
                @ForksRight.performed += instance.OnForksRight;
                @ForksRight.canceled += instance.OnForksRight;
                @ForksSplit.started += instance.OnForksSplit;
                @ForksSplit.performed += instance.OnForksSplit;
                @ForksSplit.canceled += instance.OnForksSplit;
                @ForksClamp.started += instance.OnForksClamp;
                @ForksClamp.performed += instance.OnForksClamp;
                @ForksClamp.canceled += instance.OnForksClamp;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnSteer(InputAction.CallbackContext context);
        void OnGas(InputAction.CallbackContext context);
        void OnBrake(InputAction.CallbackContext context);
        void OnGearUp(InputAction.CallbackContext context);
        void OnGearDown(InputAction.CallbackContext context);
        void OnForksUp(InputAction.CallbackContext context);
        void OnForksDown(InputAction.CallbackContext context);
        void OnTiltUp(InputAction.CallbackContext context);
        void OnTiltDown(InputAction.CallbackContext context);
        void OnForksLeft(InputAction.CallbackContext context);
        void OnForksRight(InputAction.CallbackContext context);
        void OnForksSplit(InputAction.CallbackContext context);
        void OnForksClamp(InputAction.CallbackContext context);
    }
}
